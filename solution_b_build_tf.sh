#!/bin/bash
# Solution B: Build TensorFlow 2.16+ for CUDA 12.5

echo "=== SOLUTION B: Build TensorFlow 2.16+ for CUDA 12.5 ==="
echo ""
echo "WARNING: This takes 4-8 hours and requires 16GB+ RAM and 50GB+ disk space!"
echo ""

echo "PREREQUISITES:"
echo "- Ubuntu 20.04+ or equivalent"
echo "- Python 3.10+"
echo "- Bazel 6.1.0 (exact version for TF 2.16)"
echo "- 16GB+ RAM, 50GB+ free disk space"
echo "- CUDA 12.5 (already installed ✓)"
echo "- cuDNN 9.1 (already installed ✓)"
echo ""

echo "STEP 1: Install Build Dependencies"
echo "-----------------------------------"
echo "sudo apt update"
echo "sudo apt install python3-dev python3-pip build-essential git"
echo "pip3 install numpy wheel packaging requests opt_einsum"
echo ""

echo "STEP 2: Install Bazel 6.1.0"
echo "----------------------------"
echo "wget https://github.com/bazelbuild/bazel/releases/download/6.1.0/bazel-6.1.0-installer-linux-x86_64.sh"
echo "chmod +x bazel-6.1.0-installer-linux-x86_64.sh"
echo "sudo ./bazel-6.1.0-installer-linux-x86_64.sh"
echo ""

echo "STEP 3: Clone and Configure TensorFlow"
echo "--------------------------------------"
echo "git clone https://github.com/tensorflow/tensorflow.git"
echo "cd tensorflow"
echo "git checkout v2.16.1  # Latest stable with CUDA 12.x support"
echo ""
echo "# Configure for CUDA 12.5"
echo "export TF_NEED_CUDA=1"
echo "export TF_CUDA_VERSION=12.5"
echo "export TF_CUDNN_VERSION=9.1"
echo "export CUDA_TOOLKIT_PATH=/usr/local/cuda-12.5"
echo "export CUDNN_INSTALL_PATH=/home/fryga/of_v0.11.2_linux64gcc6_release/apps/myApps/AI_danceMirror/cudnn-linux-x86_64-9.1.0.70_cuda12-archive"
echo "./configure"
echo ""
echo "During configuration:"
echo "- Python location: /usr/bin/python3"
echo "- CUDA support: Yes"
echo "- CUDA version: 12.5"
echo "- cuDNN version: 9.1"
echo "- Compute capabilities: 7.5,8.6,8.9 (adjust for your GPU)"
echo ""

echo "STEP 4: Build TensorFlow C Library (4-8 hours!)"
echo "-----------------------------------------------"
echo "# Debug build (slower but debuggable)"
echo "bazel build -c dbg --config=cuda --copt=-O2 tensorflow:libtensorflow.so tensorflow:libtensorflow_framework.so"
echo ""
echo "# Alternative: Optimized build (faster runtime)"
echo "# bazel build -c opt --config=cuda tensorflow:libtensorflow.so tensorflow:libtensorflow_framework.so"
echo ""

echo "STEP 5: Install Built Libraries"
echo "-------------------------------"
echo "PROJECT_ROOT='/home/fryga/of_v0.11.2_linux64gcc6_release/apps/myApps/AI_danceMirror'"
echo "# Backup old libraries"
echo "mkdir \$PROJECT_ROOT/backup_libs"
echo "mv \$PROJECT_ROOT/bin/lib*tensorflow* \$PROJECT_ROOT/backup_libs/"
echo "mv \$PROJECT_ROOT/lib/lib*tensorflow* \$PROJECT_ROOT/backup_libs/"
echo ""
echo "# Install new libraries"
echo "cp bazel-bin/tensorflow/libtensorflow.so \$PROJECT_ROOT/bin/"
echo "cp bazel-bin/tensorflow/libtensorflow_framework.so \$PROJECT_ROOT/bin/"
echo "cp bazel-bin/tensorflow/libtensorflow.so \$PROJECT_ROOT/lib/"
echo "cp bazel-bin/tensorflow/libtensorflow_framework.so \$PROJECT_ROOT/lib/"
echo ""

echo "STEP 6: Test"
echo "------------"
echo "cd \$PROJECT_ROOT"
echo "make clean && make Debug"
echo "./bin/AI_danceMirror_debug"
echo ""

echo "This solution provides the best performance with CUDA 12.5 but requires significant time investment."
